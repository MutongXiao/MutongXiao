# https 协议端口
server {
    #SSL 访问端口号为 443
    #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
    listen 443 ssl;
    #填写绑定证书的域名或ip:  abcjs123.vip  124.222.200.130
    server_name  abcjs123.vip;
    #证书文件 所在位置
    ssl_certificate cert/abcjs123.vip_bundle.crt;
    #私钥文件 所在位置
    ssl_certificate_key cert/abcjs123.vip.key;
    ssl_session_timeout 5m;
    #请按照以下协议配置
    ssl_protocols TLSv1.2 TLSv1.3;
    #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;
    
    location /service/discuss {
        proxy_set_header X-Real-IP $remote_addr;

        # 后端的Web服务器可以通过 X-Forwarded-For 获取用户真实 IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # 获取真实的请求主机名
        proxy_set_header Host  $http_host;

        # 标识该请求由 nginx 转发
        proxy_set_header X-Nginx-Proxy true;
        proxy_pass http://127.0.0.1:6870;

        # 设置是否允许 cookie 传输
        add_header Access-Control-Allow-Credentials true;
        # 允许请求地址跨域 * 做为通配符
        add_header Access-Control-Allow-Origin * always;
        # 允许跨域的请求方法
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}

# 走http协议端口
server {
    listen 80;
    # 填写绑定证书的域名或IP
    # server_name abcjs123.vip;
    # 把http的域名请求转成https
    # return 301 https://$host$request_uri;

    #需要将abcjs123.vip替换成证书绑定的域名。
    server_name abcjs123.vip;
    rewrite ^(.*)$ https://$host$1; #将所有HTTP请求通过rewrite指令重定向到HTTPS。
}